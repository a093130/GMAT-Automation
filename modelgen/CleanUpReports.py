#! Python
# -*- coding: utf-8 -*-
"""
Created on Fri Mar  29 2022

@author: colinhelms@outlook.com

@description:  Module for class definition CleanUpReports.

@copyright: Copyright (C) 2022 Freelance Rocket Science, All rights reserved.

XlWings Copyright (C) Zoomer Analytics LLC. All rights reserved.
https://docs.xlwings.org/en/stable/license.html
   
@change:
    29 Mar 2022, initial baseline
"""
import os
import time
import re
import platform
import logging
import traceback
import getpass
import csv
from pathlib import Path
from pathlib import PurePath
import datetime as dt
import xlsxwriter as xwrt
import xlsxwriter.utility as xlut
from gmatlocator import CGMATParticulars
from reduce_report import dtdict
import reduce_report as rr
from PyQt5.QtWidgets import(QApplication, QFileDialog, QProgressDialog)

class CleanUpReports:
    """ Base Class.  Provides minimal methods to decimate spaces and commas in text files, 
        writes a clean Excel file.  Designed for specialization through overload of the extend function.
    """

    def __init__(self):
        self.filelist = []
        """ The extend class function may use this list to persist the paths to files written in either
            the base class or in instances of derived classes.  It's content may be different in differing
            specializations.
        """

    def extend(self, rpt):
        """ The base version of this extension function decimates spaces and commas and writes a corresponding
            Excel file out. 
        """
        try:
            nospc = rr.decimate_spaces(rpt)
            reduced = rr.decimate_commas(nospc)
            xlfile = rr.csv_to_xlsx(reduced)

            nospc = Path(nospc)
            if nospc.exists():
                nospc.unlink()

            reduced = Path(reduced)
            if reduced.exists():
                reduced.unlink()
        
            logging.info('Cleaned up file: %s.', str(xlfile))
            
            self.filelist.append(xlfile)
            """ Keep track of the Excel Files written. """

            return(None)

        except OSError as e:
            logging.error("OS error: %s for filename %s", e.strerror, e.filename)

        except Exception as e:
            lines = traceback.format_exc().splitlines()
            logging.error("Exception: %s\n%s\n%s", e.__doc__, lines[0], lines[-1])

    def do_batch(self, batchfile):
        """ Open the master batch file 'filename.batch'.
            This file should contain a line by line list of paths to report files generated by GMAT.
            Module reduce_report.decimate_spaces(), reduce_report.decimate_commas(), and 
            reduce_report.csv_to_xlsx() will be applied in sequence to each file listed.
        """
        try:    
            with open(batchfile) as f:
                regecr = re.compile('\s')

                for filepath in f:                
                    """ Iterate through report files named in batch. """
                    logging.info('Reducing file: {0}'.format(filepath))

                    filepath = regecr.sub('',filepath)
                    """Get rid of newline following path string."""

                    rpt = Path(filepath)

                    if rpt.exists() & rpt.is_file():

                        self.extend(rpt)
                        """ Child classes should use extend() for additional file processing. 
                            The base implementation writes out an Excel file for each file in the batch, 
                            Then deletes the intermediary files.

                            Note that self ignores any return from extend.  Do not add processing below
                            that requires a return, or makes an assumption regarding extend processing.
                        """

        except OSError as e:
            logging.error("OS error: %s for filename %s", e.strerror, e.filename)

        except Exception as e:
            lines = traceback.format_exc().splitlines()
            logging.error("Exception: %s\n%s\n%s", e.__doc__, lines[0], lines[-1])
